:host {
  --block-max-width: 100%;
  --blocks-gap: 18px;
  --common-input-height: 50px;
  --input-block-height: var(--common-input-height);
  --input-swapper-bg: light-dark(var(--primary-100_light), var(--primary-90_dark));
  --circle-size: calc(var(--input-block-height) - 14px);
  --airport-list-wrapper-bg: light-dark(var(--primary-100_light), var(--primary-100_dark));
  --body-content-wrapper-bg: light-dark(var(--primary-100_light), var(--primary-100_dark));
  --body-input-wrapper-bg: light-dark(var(--primary-100_light), var(--primary-10_dark));
  position: relative;
  display: flex;
  flex-shrink: 0;
  align-items: flex-end;
  flex-grow: var(--block-max-width);
  max-width: var(--block-max-width);
  justify-content: center;
  width: 100%;

  &:is(.error) {
    margin-block-end: 1rem;
  }
  .search-element-block {
    width: 100%;
    z-index: 0;
    &:is(.active) { z-index: 5; }
    & .block-body {
      align-items: center;
      .block-body-content {
        --box-shadow-size: 14px;
        position: absolute;
        width: 100%;
        height: auto;
        border-radius: inherit;
        display: flex;
        flex-direction: column;
        transition: var(--transition);
        inset-block-start: 0;
        gap: 0.35rem;
        &:is(.active) {
          background-color: var(--body-content-wrapper-bg);
          width: calc(var(--block-max-width) + 1rem);
          z-index: 2;
          box-shadow:
            0 0 0 var(--box-shadow-size) var(--body-content-wrapper-bg),
            0 0 0 calc(var(--box-shadow-size) + 1px) var(--input-block-border);
          .input-wrapper {
            background-color: var(--input-block-active-bg);
            border-radius: inherit;
          }
        }
        .input-wrapper {
          display: flex;
        }
      }
      input {
        &:placeholder-shown {
          font-size: 0.9rem;
        }
        &:not(:placeholder-shown) {
          font-weight: 700;
          font-size: 1rem;
        }
      }
      .block-body-circle {
        position: absolute;
        width: var(--circle-size);
        height: var(--circle-size);
        overflow: clip;
        display: flex;
        justify-content: center;
        align-items: center;
        pointer-events: none;
        &::before {
          content: '';
          position: absolute;
          width: calc(var(--circle-size) * 1.0);
          height: calc(var(--circle-size) * 1.0);
          border-radius: var(--circle-size);
          background-color: var(--input-block-bg, var(--block-bg-fallback));
          box-shadow: 0 0 0 1px var(--input-block-border);
        }
      }
      &:hover, &:focus-within, &:is(.active) {
        --input-block-icon-color: var(--input-block-hover-color)
      }
    }
    &[data-type="origin"] {
      &:is(.active) { z-index: 5;}
      --input-block-icon-color: var(--secondary);
      .block-body-circle {
        inset-inline-end: 0;
        &::before {
          inset-inline-start: calc(50% + 4px);
        }
      }
      & .block-body {
        .block-body-content {
          inset-inline-start: 0;
          input { padding-inline-end: 1.25rem; }
        }
        &::before {
          inset-inline-end: calc(0px - calc(var(--input-block-height) / 2.2));
        }
      }
    }
    &[data-type="destination"] {
      --input-block-icon-color: var(--accent);
      .block-body-circle {
        inset-inline-start: 0;
        &::before {
          inset-inline-end: calc(50% + 4px);
        }
      }
      .block-body {
        .block-body-content {
          inset-inline-end: 0;
          input { padding-inline-end: 0.5rem; }
          &:not(.active) {
            .input-wrapper {
              padding-inline-start: 0.5rem;
            }
          }
        }
      }
    }
  }
  .swapper-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    width: var(--blocks-gap);
    height: var(--input-block-height);
    position: relative;
    z-index: 2;
    .swapper {
      --outline-bg: var(--accent);
      --outline-color: var(--accent);
      --outline-text-color: var(--accent-color);
      width: var(--circle-size);
      height: var(--circle-size);
      position: absolute;
      display: grid;
      place-items: center;
      border-radius: var(--circle-size);
      cursor: pointer;
      transition: var(--transition);
      isolation: isolate;
      overflow: clip;
      &:not(:focus-within, &:focus, &:focus-visible) {
        background-color: var(--input-swapper-bg);
      }
      &::after {
        content: '';
        position: absolute;
        inset: 0;
        border-radius: inherit;
        transition: inherit;
        scale: 0;
        z-index: -1;
      }
      &:is(.swapped) {
        rotate: 180deg;
      }
      &:hover {
        color: var(--accent-color);
        &::after {
          background-color: var(--accent);
          scale: 0.9;
        }
      }
    }
  }
}
