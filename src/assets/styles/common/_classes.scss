.text {
  &--primary, &-primary {
    color: var(--bs-primary) !important;
  }
  &--accent, &-accent {
    color: var(--bs-accent) !important;
  }
  &--link {
    color: var(--bs-link-color) !important;
  }
  &-hover {
    &--primary:hover, &-primary:hover {
      color: var(--bs-primary) !important;
    }
    &--accent:hover, &-accent:hover {
      color: var(--bs-accent) !important;
    }
    &--link:hover, &-link:hover {
      color: var(--bs-accent) !important;
    }
    &--underline:hover, &--underline:hover {
      text-decoration: underline;
    }
  }
}

.max-width {
  $types: 'max-content', 'min-content', 'fit-content', 'initial', 'inherit';
  @each $i in $types {
    &--#{$i},
    &-#{$i} {
      max-width: #{$i} !important;
    }
  }
}
.hover {
  $types: 'primary', 'accent', 'success', 'danger', 'warning', 'info';
  @each $i in $types {
    &--#{$i}, &-#{$i} {
      &:hover {
        background-color: var(--bs-#{$i}) !important;
        color: var(--bs-white) !important;
      }
    }
    &-bg--#{$i}, &-bg-#{$i} {
      &:hover {
        background-color: var(--bs-#{$i}) !important;
      }
    }
    &-text--#{$i}, &-text-#{$i} {
      &:hover {
        color: var(--bs-#{$i}) !important;
      }
    }
  }
}
// .opacity {
//   $opacities: '10', '15', '20', '25', '30', '35', '40', '45', '50', '55', '60', '65', '70', '75', '80', '85', '90', '95', '100';
//   @each $opacity in $opacities {
//     &--#{$opacity}, &-#{$opacity} {
//       opacity: #{0.#{$opacity}} !important;
//     }
//   }
// }
.cursor {
  $cursors: 'auto', 'pointer', 'initial', 'not-allowed';
  @each $cursor in $cursors {
    &--#{$cursor}, &-#{$cursor} { cursor: #{$cursor} !important; }
  }
}
.pointer-event, .pointer-events {
  $pointerEvents: 'none', 'initial';
  @each $pointer in $pointerEvents {
    &--#{$pointer}, &-#{$pointer} {
      pointer-events: #{$pointer} !important;
    }
  }
}
body:not(.arabic) {
  .font {
    &--exo, &-exo {
      font-family: var(--exo);
      strong, b { font-weight: 600 !important; }
      &--bold, &-bold { font-weight: 600 !important; }
    }
  }
}
.font, .f {
  &--roboto, &-roboto {
    font-family: var(--roboto);
    strong, b { font-weight: 600 !important; }
    &--bold, &-bold { font-weight: 600 !important; }
  }
  &-weight, &-w {
    $weights: 100, 200, 300, 400, 500, 600, 700, 800, 900;
    @each $weight in $weights {
      &-#{$weight}, &--#{$weight} {
        font-weight: $weight !important;
      }
    }
  }
}
.line-height {
  &--normal,
  &-normal { line-height: normal !important; }
  &--auto, &-auto { line-height: auto !important; }
}

.margin {
  &-start--auto, &-start-auto {
    margin-inline-start: auto !important;
  }
}

.alignContent {
  $types: 'center', 'start', 'end';
  @each $i in $types {
    &--#{$i}, &-#{$i} {
      display: flex;
      @if($i == center) {
        justify-content: center;
        align-items: center;
      } @else if ($i == end) {
        justify-content: flex-end;
      } @else {
        justify-content: center;
        align-items: center;
      }
    }
  }
}

.btn-status {
  position: relative;
  border: 0;
  outline: none;
  min-width: var(--status-btn-width);
  max-width: max-content;
  height: var(--status-btn-height);
  background-color: var(--status-btn-bg);
  color: var(--status-btn-color);
  font-size: var(--status-btn-font-size);
  font-weight: var(--status-btn-font-weight);
  padding-inline: var(--status-btn-padding-x);
  padding-block: var(--status-btn-padding-y);
  border-radius: var(--status-btn-border-radius);
  transition: var(--bs-transition);
  cursor: auto !important;

  &:is(.btn-status--ticketed, .btn-status--issued, .btn-status--success, .btn-status--completed, .btn-status--confirmed) {
    --status-btn-bg: rgba(var(--bs-success-rgb), var(--status-btn-bg-opacity));
    --status-btn-color: var(--bs-success);
  }

  &:is(.btn-status--unconfirmed, .btn-status--voided, .btn-status--void, .btn-status--in-progress, .btn-status--progress, .btn-status--pending) {
    --status-btn-bg: rgba(var(--bs-warning-rgb), var(--status-btn-bg-opacity));
    --status-btn-color: var(--bs-warning);
  }

  &:is(.btn-status--cancelled, .btn-status--danger, .btn-status--failed, .btn-status--fail) {
    --status-btn-bg: rgba(var(--bs-danger-rgb), var(--status-btn-bg-opacity));
    --status-btn-color: var(--bs-danger);
  }

  &:is(.btn-status--refunded) {
    --status-btn-bg: rgba(var(--bs-primary-rgb), var(--status-btn-bg-opacity));
    --status-btn-color: var(--bs-primary);
  }

  &:is(.btn-status--hold, .btn-status--on-hold, .btn-status--info) {
    --status-btn-bg: rgba(var(--bs-info-rgb), var(--status-btn-bg-opacity));
    --status-btn-color: var(--bs-info);
  }

  &:is(.btn-status--order-closed, .btn-status--closed) {
    --status-btn-bg-opacity: 0.18;
    --status-btn-bg: rgba(var(--bs-body-color-rgb), var(--status-btn-bg-opacity));
    --status-btn-color: rgba(var(--bs-body-color-rgb), 0.8);
  }

  &:is(.btn-status--filled) {
    --status-btn-bg-opacity: 1;
    --status-btn-color: var(--bs-white);
  }

  &:is(.btn-status-size--xs) {
    --status-btn-height: 25px;
    --status-btn-padding-x: 0.5rem;
    --status-btn-font-size: 0.75rem;
  }

  &:is(.btn-status-size--sm) {
    --status-btn-height: 30px;
    --status-btn-padding-x: 0.6rem;
    --status-btn-font-size: 0.93rem;
  }

  &:is(.btn-status-size--md) {
    --status-btn-height: 35px;
  }

  &:is(.btn-status-size--lg) {
    --status-btn-height: 40px;
    --status-btn-font-size: 1.075rem;
  }

  &:is(.btn-status-size--xl) {
    --status-btn-height: 45px;
    --status-btn-font-size: 1.15rem;
  }
}

.z-index {
  $zIndexes: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 40, 50;
  @each $zIndex in $zIndexes {
    &--#{$zIndex}, &-#{$zIndex} {
      z-index: $zIndex;
    }
  }
}
